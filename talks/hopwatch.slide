Hopwatch
debugging tool for Go

Ernest Micklei
Software Architect, bol.com
http://ernestmicklei.com

* What is Hopwatch?

Simple tool that allows you to follow the *execution* and *state* of your program.

.image hopwatch_how.png




* API

Suspend program until "Resume" in browser
	
	hopwatch.Break()	
	

Print a line, fmt-package style

	hopwatch.Printf("var=%v", var)
		

Pretty print a value with type information (uses go-spew)

	hopwatch.Dump(treeNode)	
	

Conditional break
	
	hopwatch.Printf("i=%v,j=%v",i,j).Break(j > 10)
		

* Show me Hopwatch




* Basic usage

.code no_debug.go





* debug.go

Control hopwatch behavior from one source file

.code debug.go



* Simplified usage

.code try_debug.go

.image try_debug.png


* Hopwatch flags to override defaults

disable hopwatch

	-hopwatch=false
	
do not automatically open a browser for the hopwatch page

	-hopwatch.open=false
		
do not suspend the program if Break(..) is called

	-hopwatch.break=false
	
tell the debugger to accepts connections on

	-hopwatch.host=server.test.company.nl
	-hopwatch.port=23456


* Hopwatch

:-(

- Requires program modification (import + Dump & Break calls)
- Cannot debug third party code
- No state modification possible

:-)

- Easy to use
- Less complex than GDB
- Highlight source on break
- Capture history of state and stack in browser page